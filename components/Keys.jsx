


useGLTF.preload("./models/whjy.glb");
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useGLTF, useScroll } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";
import gsap from "gsap";
import React, { useLayoutEffect, useRef } from "react";

export const FLOOR_HEIGHT = 2.3;
export const NB_FLOORS = 3;

export function Keys(props) {
  const { nodes, materials } = useGLTF("./models/whjy.glb");
  const ref = useRef();
  const tl = useRef();
  const libraryRef = useRef();
  const atticRef = useRef();
  const wholeRef = useRef();


  const scroll = useScroll();

  useFrame(() => {
    tl.current.seek(scroll.offset * tl.current.duration());
  });


  useLayoutEffect(() => {
    tl.current = gsap.timeline();

    // VERTICAL ANIMATION
    tl.current.to(
      ref.current.position,
      {
        duration: 2,
        y: -0.5,
      },
      0
    );

     // Office Rotation
     tl.current.to(
      ref.current.rotation,
      { duration: 1, x: 0, y: Math.PI / 192, z: 0 },
      0
    );

  

    // LIBRARY FLOOR
    tl.current.from(
      libraryRef.current.position,
      {
        duration: 1,
        y: 4,
      },
      0
    );


    // ATTIC
    tl.current.from(
      atticRef.current.position,
      {
        duration: 2,
        y: 6,
      },
      2
    );


  }, []);

  return (

    <group 
      {...props}
      dispose={null}
      ref={ref}
      position={[0.5, -1, -1]}

      rotation={[0, -Math.PI / 9, 0]}

    >
      <mesh

geometry={nodes.Room.geometry}
material={materials["1"]}
      />      <group >
        <group ref={libraryRef}>
        <mesh

geometry={nodes.Pulje1.geometry}
material={materials["2"]}
position={[0.54, 0.13, -0.59]}
scale={0.1}
      />
        </group>
      </group>
      <group >
        <group ref={atticRef}>
        <mesh
   
   geometry={nodes.Pulje3.geometry}
   material={materials["3"]}
   position={[-0.57, 0.34, 0.88]}
   rotation={[0, 0.13, 0]}
   scale={[0.16, 0.3, 0.16]}
      />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("./models/whjy.glb");